=== Old Resource List ===
Resource type: fs
Instances: 1/1
Agent: fs.sh
Attributes:
  name = mount1 [ primary ]
  mountpoint = /mnt/cluster [ unique required ]
  device = /dev/sdb8 [ unique required ]
  fstype = ext3
  nfslock [ inherit("nfslock") ]

Resource type: ip
Instances: 1/1
Agent: ip.sh
Attributes:
  address = 192.168.1.3 [ primary unique ]
  monitor_link = yes
  nfslock [ inherit("service%nfslock") ]

Resource type: nfsexport
Agent: nfsexport.sh
Attributes:
  name = Dummy Export [ primary ]
  device [ inherit("device") ]
  path [ inherit("mountpoint") ]
  fsid [ inherit("fsid") ]

Resource type: script
Agent: script.sh
Attributes:
  name = initscript [ primary unique ]
  file = /etc/init.d/sshd [ unique required ]
  service_name [ inherit("service%name") ]

Resource type: service
Instances: 1/1
Agent: service.sh
Attributes:
  name = test1 [ primary unique required ]

=== New Resource List ===
Resource type: fs
Instances: 1/1
Agent: fs.sh
Attributes:
  name = mount1 [ primary ]
  mountpoint = /mnt/cluster [ unique required ]
  device = /dev/sdb8 [ unique required ]
  fstype = ext3
  nfslock [ inherit("nfslock") ]

Resource type: ip
Instances: 1/1
Agent: ip.sh
Attributes:
  address = 192.168.1.3 [ primary unique ]
  monitor_link = yes
  nfslock [ inherit("service%nfslock") ]

Resource type: nfsclient [NEEDSTART]
Agent: nfsclient.sh
Attributes:
  name = User group [ primary unique ]
  target = @users [ required ]
  path [ inherit("path") ]
  fsid [ inherit("fsid") ]
  options = ro

Resource type: nfsclient [NEEDSTART]
Agent: nfsclient.sh
Attributes:
  name = Admin group [ primary unique ]
  target = @admin [ required ]
  path [ inherit("path") ]
  fsid [ inherit("fsid") ]
  options = rw

Resource type: nfsclient [NEEDSTART]
Agent: nfsclient.sh
Attributes:
  name = yellow [ primary unique ]
  target = yellow [ required ]
  path [ inherit("path") ]
  fsid [ inherit("fsid") ]
  options = rw,no_root_squash

Resource type: nfsclient [NEEDSTART]
Agent: nfsclient.sh
Attributes:
  name = magenta [ primary unique ]
  target = magenta [ required ]
  path [ inherit("path") ]
  fsid [ inherit("fsid") ]
  options = rw,no_root_squash

Resource type: nfsclient [NEEDSTART]
Agent: nfsclient.sh
Attributes:
  name = red [ primary unique ]
  target = red [ required ]
  path [ inherit("path") ]
  fsid [ inherit("fsid") ]
  options = rw,no_root_squash

Resource type: nfsexport
Agent: nfsexport.sh
Attributes:
  name = Dummy Export [ primary ]
  device [ inherit("device") ]
  path [ inherit("mountpoint") ]
  fsid [ inherit("fsid") ]

Resource type: script
Agent: script.sh
Attributes:
  name = initscript [ primary unique ]
  file = /etc/init.d/sshd [ unique required ]
  service_name [ inherit("service%name") ]

Resource type: service
Instances: 1/1
Agent: service.sh
Attributes:
  name = test1 [ primary unique required ]

=== Old Resource Tree ===
service {
  name = "test1";
  fs {
    name = "mount1";
    mountpoint = "/mnt/cluster";
    device = "/dev/sdb8";
    fstype = "ext3";
      }
  ip {
    address = "192.168.1.3";
    monitor_link = "yes";
      }
  script {
    name = "initscript";
    file = "/etc/init.d/sshd";
    service_name = "test1";
  }
}
=== New Resource Tree ===
service {
  name = "test1";
  fs {
    name = "mount1";
    mountpoint = "/mnt/cluster";
    device = "/dev/sdb8";
    fstype = "ext3";
        nfsexport [ NEEDSTART ] {
      name = "Dummy Export";
      device = "/dev/sdb8";
      path = "/mnt/cluster";
            nfsclient {
        name = "Admin group";
        target = "@admin";
        path = "/mnt/cluster";
                options = "rw";
      }
      nfsclient {
        name = "User group";
        target = "@users";
        path = "/mnt/cluster";
                options = "ro";
      }
    }
  }
  ip {
    address = "192.168.1.3";
    monitor_link = "yes";
      }
  script {
    name = "initscript";
    file = "/etc/init.d/sshd";
    service_name = "test1";
  }
}
