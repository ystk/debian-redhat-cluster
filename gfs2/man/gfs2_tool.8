.TH gfs2_tool 8

.SH NAME
gfs2_tool - interface to gfs2 ioctl/sysfs calls

.SH SYNOPSIS
.B gfs2_tool
\fICOMMAND\fR [\fIOPTION\fR]...

.SH DESCRIPTION
gfs2_tool is an interface to a variety of the GFS2 ioctl/sysfs calls. Some
of the functions of gfs_tool have been replaced by standard system tools
such as mount and chattr, so gfs2_tool doesn't have as many options
as gfs_tool used to.

.SH COMMANDS
.TP
\fBclearflag\fP \fIFlag\fR \fIFile1\fR \fIFile2\fR \fI...\fR 
Clear an attribute flag on a file. This is now obsolete and kept
only for backward compatibility, chattr is the preferred way to
clear attribute flags. See \fBsetflag\fP for available flags. This
option will probably be removed at a future date.
.TP
\fBfreeze\fP \fIMountPoint\fR
Freeze (quiesce) a GFS2 cluster.
.TP
\fBgettune\fP \fIMountPoint\fR
Print out the current values of the tuning parameters in a running
filesystem. A better source of similar (more comprehensive) information
is that in the /proc/mounts file. Running the mount command with no
arguments will also provide the same information. This option is
considered obsolete and will probably be removed at some future
date.
.TP
\fBjournals\fP \fIMountPoint\fR
Print out information about the journals in a mounted filesystem.
.TP
\fBlockdump\fP \fIMountPoint\fR
Print out information about the locks this machine holds for a given
filesystem. This information is also available via the debugfs
glock dump file, and accessing that file is the preferred method
of obtaining a dump of the glock state.
.\".TP
.\"\fBrindex\fP \fIMountPoint\fR
.\"Print out the resource group index of a mounted filesystem.
.TP
\fBsb\fP \fIdevice\fR \fBproto\fP \fI[newvalue]\fR
View (and possibly replace) the name of the locking protocol in the
file system superblock.  The file system shouldn't be mounted by any
client when you do this.
.TP
\fBsb\fP \fIdevice\fR \fBtable\fP \fI[newvalue]\fR
View (and possibly replace) the name of the locking table in the
file system superblock.  The file system shouldn't be mounted by any
client when you do this.
.TP
\fBsb\fP \fIdevice\fR \fBondisk\fP \fI[newvalue]\fR
View (and possibly replace) the ondisk format number in the
file system superblock.  The file system shouldn't be mounted by any
client when you do this.  No one should have to use this.
.TP
\fBsb\fP \fIdevice\fR \fBmultihost\fP \fI[newvalue]\fR
View (and possibly replace) the multihost format number in the
file system superblock.  The file system shouldn't be mounted by any
client when you do this.  No one should have to use this.
.TP
\fBsb\fP \fIdevice\fR \fBuuid\fP \fI[newvalue]\fR
View (and possibly replace) the uuid in the file system superblock.
The file system shouldn't be mounted by any client when you do this.
The new uuid value should be in the standard uuid format.  For
example: 1AEA8269-15C5-72BD-6D83-8720B17AA4EE
.TP
\fBsb\fP \fIdevice\fR \fBall\fP
Print out the superblock.
.TP
\fBsetflag\fP \fIFlag\fR \fIFile1\fR \fIFile2\fR \fI...\fR 
Set an attribute flag on a file.  The currently supported flags are 
jdata, immutable, appendonly, noatime, and sync.  The 
chattr command is the preferred way to set attributes on
files. This option will probably be removed at a future date.

The \fIjdata\fR flag causes all the data written to a file
to be journaled.  If the \fIjdata\fR flag is set for a directory,
all files and directories subsequently created within that directory
are also journaled.  This behavior replaces the old \fIinherit_jdata\fR
flag from gfs.  Same as chattr +j.

The \fIimmutable\fR flag marks the file immutable. The behavior is 
similar to the immutable flag in the ext2/3 filesystems.  All write 
access is denied.  Same as chattr +i.

The \fIappendonly\fR flag causes all data to be written at the end of 
the file.  Same as chattr +a.

The \fInoatime\fR flag disables updates to the file's access time.
Same as chattr +A.

The \fIsync\fR flag causes data written to the file to be sync'ed to 
stable storage immediately.  Same as chattr +S.
.TP
\fBsettune\fP \fIMountPoint\fR \fIparameter\fR \fInewvalue\fR
Set the value of tuning parameter.  Use \fBgettune\fP for a listing of 
tunable parameters. The mount -oremount command is the preferred way
to set the values of tunable parameters. At some future stage, when
all parameters can be set via mount, this option will be removed.
.TP
\fBunfreeze\fP \fIMountPoint\fR
Unfreeze a GFS2 cluster.
.TP
\fBversion\fP
Print out the version of GFS2 that this program goes with.
.TP
\fBwithdraw\fP \fIMountPoint\fR
Cause GFS2 to abnormally shutdown a given filesystem on this node.
This feature is only useful for testing and should not be used
during normal filesystem operation.

