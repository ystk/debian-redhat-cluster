.TH gfs_tool 8

.SH NAME
gfs_tool - interface to gfs ioctl calls

.SH SYNOPSIS
.B gfs_tool
\fICOMMAND\fR [\fIOPTION\fR] [\fIPARAMETERS ...\fR]

.SH DESCRIPTION
gfs_tool is an interface to a variety of the GFS ioctl calls.
.TP
Specifying gfs_tool -h prints gfs_tool command line usage (help).
.TP
Specifying gfs_tool -V prints the gfs_tool version information.
.SH COMMANDS
.TP
\fBclearflag\fP \fIFlag\fR \fIFile1\fR \fIFile2\fR \fI...\fR 
Clear an attribute flag on a file.
.TP
\fBcounters\fP \fIMountPoint\fR [-c] [-i \fIinterval\fR]
Print out statistics about a filesystem.  If -c is specified, gfs_tool
keeps running printing out the statistics once per second or, if
specified, the interval given with the -i option, in seconds.
.TP
\fBdf\fP \fIMountPoint\fR [-k]|[-H]
Print out a space usage summary of a given filesystem.  The information
printed is more detailed than a standard "df".  If -k is specified, the
output is given in kilobytes (KB).  If -H is specified, the output is
given in human readable format (similar to df -h).  If neither -k nor -H
are specified, the output is given in file system blocks.

.TP
\fBfreeze\fP \fIMountPoint\fR
Freeze (quiesce) a GFS cluster.
.TP
\fBgetsb\fP \fIMountPoint\fR
Print out the superblock of a mounted filesystem.
.TP
\fBgettune\fP \fIMountPoint\fR
Print out the current values of the tuning parameters in a running
filesystem.
.TP
\fBjindex\fP \fIMountPoint\fR
Print out the journal index of a mounted filesystem.
.TP
\fBlayout\fP \fIFile\fR \fI[buffersize]\fR
Print out on-disk layout information about a file or directory.
Buffersize is the size of the buffer (in bytes) that gfs_tool allocates
to store the file's metadata during processing.  It defaults to 4194304
bytes.  If you are printing a very big directory you may need to specify
a bigger size.
.TP
\fBlist\fP
List the currently mounted GFS filesystems.  Each line represents
a filesystem.  The columns represent (in order): 1) A number that
is a cookie that represents the mounted filesystem. 2) The name of the
device that holds the filesystem (well, the name as the Linux
kernel knows it). 3) The lock table field that the filesystem was
mounted with.
.TP
\fBlockdump\fP \fIMountPoint\fR \fI[buffersize]\fR
Print out information about the locks this machine holds for a given
filesystem. Buffersize is the size of the buffer (in bytes) that gfs_tool
allocates to store the lock data during processing.  It defaults to 4194304
bytes.
.TP
\fBmargs\fP \fIarguments\fR
This loads arguments into the module what will override the mount
options passed with the -o field on the next mount.  See mount.gfs(8).
.TP
\fBreclaim\fP \fIFile\fR
Returns unused on-disk metadata blocks to free blocks.
.TP
\fBrindex\fP \fIMountPoint\fR
Print out the resource group index of a mounted filesystem.
.TP
\fBquota\fP \fIMountPoint\fR
Print out the quota file of a mounted filesystem.  Also see
the "gfs_quota list" command.
.TP
\fBsb\fP \fIdevice\fR \fBproto\fP \fI[newvalue]\fR
View (and possibly replace) the name of the locking protocol in the
file system superblock.  The file system shouldn't be mounted by any
client when you do this.
.TP
\fBsb\fP \fIdevice\fR \fBtable\fP \fI[newvalue]\fR
View (and possibly replace) the name of the locking table in the
file system superblock.  The file system shouldn't be mounted by any
client when you do this.
.TP
\fBsb\fP \fIdevice\fR \fBondisk\fP \fI[newvalue]\fR
View (and possibly replace) the ondisk format number in the
file system superblock.  The file system shouldn't be mounted by any
client when you do this.  No one should have to use this.
.TP
\fBsb\fP \fIdevice\fR \fBmultihost\fP \fI[newvalue]\fR
View (and possibly replace) the multihost format number in the
file system superblock.  The file system shouldn't be mounted by any
client when you do this.  No one should have to use this.
.TP
\fBsb\fP \fIdevice\fR \fBall\fP
Print out the superblock.
.TP
\fBsetflag\fP \fIFlag\fR \fIFile1\fR \fIFile2\fR \fI...\fR 
Set an attribute flag on a file.  There are four currently
supported flags.  They are jdata, directio, inherit_jdata, and
inherit_directio.
  
The \fIjdata\fR flag causes all the data written to a regular file
to be journaled. The jdata flag can only be set (or cleared) if the file
is zero length.

The \fIdirectio\fR flag causes all I/O to a regular file to be Direct
I/O, even if the O_DIRECT flag isn't used on the open() command.

The \fIinherit_jdata\fR flag is set on a directory.  It causes all new
regular files created in that directory automatically inherit the
\fIjdata\fR flag.  The \fIinherit_jdata\fR is also inherited by any new
subdirectories created in that directory.

The \fIinherit_directio\fR flag is set on a directory.  It causes all new
regular files created in that directory automatically inherit the
\fIdirectio\fR flag.  The \fIinherit_directio\fR is also inherited by
any new subdirectories created in that directory.
.TP
\fBsettune\fP \fIMountPoint\fR \fIparameter\fR \fInewvalue\fR
Set the value of tuning parameter.  Use \fBgettune\fP for a listing of 
tunable parameters.
.TP
\fBshrink\fP \fIMountPoint\fR
Causes any unused inodes to be thrown out of memory.
.TP
\fBstat\fP \fIFile\fR
Print out extended stat information about a file.
.TP
\fBunfreeze\fP \fIMountPoint\fR
Unfreeze a GFS cluster.
.TP
\fBversion\fP
Print out the version of GFS that this program goes with.
.TP
\fBwithdraw\fP \fIMountPoint\fR
Cause GFS to abnormally shutdown a given filesystem on this node.

